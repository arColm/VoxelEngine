2 bytes per voxel - id

bind the vao and set vertex attributes to block attributes respectively


Each chunk is WIDTH * HEIGHT * WIDTH -- stored in a straight array
// TODO: change 1024 to generics (SHADOW_WIDTH/SHADOW_HEIGHT) -- chunkloader.cpp


TODO
	MOVE ALL DEFINITIONS FROM HEADER TO CPP FILE

	could clean up lights a little bit - e.g. increase resolution of shadow map
	add skybox
	https://gamedev.stackexchange.com/questions/21482/concerning-the-minecraft-skybox
 - instanced rendering

 - change way to store colors...

 - fog to mask chunk loading

 - clouds (can just be noise!)

 - more block types
 - varying colors for a block type?
 - multiple shaders per block? e.g. water has a unique shader
 --- use uniform buffer object to handle transformation matrices
 --- alternatively just use a different shader for liquids --> new chunk renderer for liquids
 



future optimizations

 - sharing vertices, using EBO ?
 - greedy meshing?
